#include<iostream>
#include<math.h>
using namespace std;
class poly
{
int a,b,c;
public:

poly()
{
a=0;
b=0;
c=0;
};
poly(int x, int y , int z)
{
a=x;
b=y;
c=z;
};
poly operator + (poly aso)
{
poly bn;
bn.a=a+aso.a;
bn.b=b+aso.b;
bn.c=c+aso.c;
return(bn);
}
void eval(int k)
{
int p,value;
p=k;
value= (a*p*p)+(b*p)+c;
cout<<"Value is "<<value<<endl;
}
void solve()
{
int just,det;
just=(b*b)-(4*a*c);
det=sqrt(just);
int ans1,ans2;
if(det>=0)
{
ans1= (-b + det )/(2*a);
ans2= (-b - det )/(2*a);
cout<<"The roots are"<<ans1<<"& "<<ans2<<endl;
}
else
{
cout<<"Imaginary roots"<<endl;
}
}
friend ostream &operator<<(ostream &out,poly &temp);
friend istream &operator>>(istream &in,poly &soln);
};
ostream &operator<<(ostream &out,poly &temp)
{
out<<temp.a<<"x^2 +"<<temp.b<<"x +"<<temp.c;
return(out);
}
istream &operator>>(istream &in, poly &soln)
{
in>>soln.a>>soln.b>>soln.c;
return(in);
}
int main()
{
int n,n1;
poly p1,p2;
cout<<"Enter"<<endl;
cin>>p1;
cout<<"Enter"<<endl;
cin>>p2;
cout<<p1<<endl;
cout<<p2<<endl;
poly p3=p1+p2;
cout<<p3<<endl;
cout<<"Enter value for 1st poly"<<endl;
cin>>n;
p1.eval(n);
p1.solve();
return 0;
}
